@{
    ViewBag.Title = "Tarjetas";
}

@using WebAplication_ProximaGen.Logica

@model WebAplication_ProximaGen.Models.Tarjetas

<section class="pc-container">
    <div class="pcoded-content">
        <div class="page-header">
            <div class="page-block">
                <div class="row align-items-center">
                    <div class="col-md-12">
                        <div class="page-header-title">
                            <h5 class="m-b-10">Registros</h5>
                        </div>
                        <ul class="breadcrumb">
                            <li class="breadcrumb-item"><a href="index.html">Inicio</a></li>
                            <li class="breadcrumb-item"><a href="#!">Registros</a></li>
                            <li class="breadcrumb-item">Tarjetas</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header">
                        <h5>Registrar Tarjet</h5>
                    </div>
                    <div class="card-body">
                        <h5 class="mt-5">Información Tarjetas</h5>
                        <hr>
                        @using (Html.BeginForm("CreateTarjetas", "Maintenance", FormMethod.Post))
                        {
                            <form onsubmit="return validarFormulario();">
                                <div class="row">
                                    <div class="form-group col-md-12">
                                        @Html.LabelFor(model => model.numeroTarjeta, "Numero de tarjeta", new { @class = "form-label" })
                                        @Html.TextBoxFor(model => model.numeroTarjeta, new { @class = "form-control", placeholder = "Numero de tarjeta" })
                                        @Html.LabelFor(model => model.expiracionMes, "Mes en el que expira", new { @class = "form-label" })
                                        @Html.TextBoxFor(model => model.expiracionMes, new { @class = "form-control", placeholder = "Mes en el que expira" })
                                        @Html.LabelFor(model => model.expiracionAnno, "Año en el que expira", new { @class = "form-label" })
                                        @Html.TextBoxFor(model => model.expiracionAnno, new { @class = "form-control", placeholder = "Año en el que expira" })
                                        @Html.LabelFor(model => model.cvv, "CVV", new { @class = "form-label" })
                                        @Html.TextBoxFor(model => model.cvv, new { @class = "form-control", placeholder = "CVV" })
                                        @Html.LabelFor(model => model.Personas_idPersona, "Persona", new { @class = "form-label" })
                                        @Html.TextBoxFor(model => model.Personas_idPersona, new { @class = "form-control", placeholder = "Persona" })
                                        @Html.LabelFor(model => model.Estados_idEstado, "Estado", new { @class = "form-label" })
                                        @Html.TextBoxFor(model => model.Estados_idEstado, new { @class = "form-control", placeholder = "Estado" })


                                        @*Igual ya regreso, voy por aguita, te quiero <3*@
                                    </div>
                                </div>
                                <div class="text-center">
                                    <button type="submit" class="btn btn-primary mx-auto">Agregar Tarjeta</button>
                                </div>
                            </form>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <h5>Reporte de Tarjeta</h5>
                    <span class="d-block m-t-5">Este <code>reporte</code> muestra los datos de la tarjeta</span>
                </div>
                <div class="card-body table-border-style">
                    @*<br>*@
                    <div class="form-group">
                        @*<br>*@
                    </div>


                    <div class="table-responsive">
                        <table id="tableTarjeta" class="table">
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>Numero de la tarjeta</th>
                                    <th>Mes expiración</th>
                                    <th>Año expiración</th>
                                    <th>CVV</th>
                                    <th>Persona</th>
                                    <th>Estado</th>
                                    <th>Acciones</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (TempData["Tarjetas"] != null)
                                {
                                    foreach (var tarjeta in TempData["Tarjetas"] as List<WebAplication_ProximaGen.Models.Tarjetas>)
                                    {
                                        <tr>
                                            <td>@tarjeta.idTarjeta</td>
                                            <td>@tarjeta.numeroTarjeta</td>
                                            <td>@tarjeta.expiracionMes</td>
                                            <td>@tarjeta.expiracionAnno</td>
                                            <td>@tarjeta.cvv</td>
                                            <td>@tarjeta.Personas_idPersona</td>
                                            <td>@tarjeta.Estados_idEstado</td>

                                            <td>
                                                <a href="#" class="edit-icon" data-id="@tarjeta.idTarjeta" onclick="AbrirModal('@tarjeta.idTarjeta', '@tarjeta.numeroTarjeta','@tarjeta.expiracionMes','@tarjeta.expiracionAnno','@tarjeta.cvv','@tarjeta.Personas_idPersona','@tarjeta.Estados_idEstado');"><i class="fas fa-pen"></i></a>
                                                <a href="#" class="delete-icon" data-id="@tarjeta.idTarjeta" onclick="EliminarDato(@tarjeta.idTarjeta);"><i class="fas fa-trash"></i></a>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>



                    <!-- Agrega los botones de exportación aquí -->


                </div>
            </div>
        </div>
    </div>
</section>

<!-- Modal para editar datos -->
<div class="modal fade" id="editarModal" tabindex="-1" role="dialog" aria-labelledby="editarModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editarModalLabel">Editar Datos</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Cerrar">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @using (Html.BeginForm("UpdateTarjetas", "Maintenance", FormMethod.Post))
            {
                <form>
                    <div class="modal-body">
                        <div class="form-group">
                            @Html.LabelFor(model => model.idTarjeta)
                            @Html.TextBoxFor(model => model.idTarjeta, new { @class = "form-control", @readonly = "readonly", @id = "idGenero" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.idTarjeta)
                            @Html.TextBoxFor(model => model.idTarjeta, new { @class = "form-control", @id = "descripcionGeneroInput" })
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                        <button type="submit" class="btn btn-primary">Guardar Cambios</button>
                    </div>
                </form>
            }
        </div>
    </div>
</div>


<script>

    function validarFormulario() {
        //Se obtiene el campo de descripcionrol
        var descripcionRol = document.getElementById("descripcionRolInput").value;

        if (descripcionRol === "") {
            document.getElementById("errorMensaje").innerText = "La descripción del rol no puede estar vacía";
            return false;
        }

        if (/^\s*$/.test(descripcionRol)) {
            document.getElementById("errorMensaje").innerText = "La descripción del rol no puede contener espacios vacío";
            return false;
        }

        //Verifico si existe algun digito en el input--
        if (/\d/.test(descripcionRol)) {
            document.getElementById("errorMensaje").innerText = "No se puede digitar números en la descripción";
            return false;
        }

        return true;

    }

    function AbrirModal(idGenero, genero) {
        const idGeneroInput = document.getElementById("idGenero");
        const descripcionGeneroInput = document.getElementById("descripcionGeneroInput");

        idGeneroInput.value = idGenero;
        descripcionGeneroInput.value = genero;

        const editarModal = new bootstrap.Modal(document.getElementById("editarModal"));
        editarModal.show();
    }




    function EliminarDato(idGenero) {

        var controller = "Maintenance";
        var action = "DeleteGenero";
        var successMessage = "Se eliminó el género con éxito";
        var errorMessage = "No se ha eliminado, hubo un error de comunicación";
        var dataString = "idGenero";

        EliminarDatosAjax(idGenero, controller, action, successMessage, errorMessage, dataString);
    }

</script>

@if (TempData["response"] != null)
{
    if (TempData["response"] == null)
    {
        <script>
            CreateAlert('Fallo del sistema', 'error', 'No ha devuelto una respuesta, comuniquese con IT');
        </script>
    }

    if (TempData["response"].ToString().Contains(Constantes.responses[1]))
    {
        <script>
            var decodedResponse = @Html.Raw(Json.Encode(TempData["response"]));
            CreateAlert('Creación Exitosa', 'success', decodedResponse);
        </script>
    }

    if (TempData["response"].ToString().Contains(Constantes.responses[2]))
    {
        <script>
            var decodedResponse = @Html.Raw(Json.Encode(TempData["response"]));
            CreateAlert('Creación Denegada', 'error', decodedResponse);
        </script>
    }
}