
@{
    ViewBag.Title = "Permissions";
}

@using WebAplication_ProximaGen.Logica

@model WebAplication_ProximaGen.Models.Permissions



<section class="pc-container">
    <div class="pcoded-content">
        <div class="page-header">
            <div class="page-block">
                <div class="row align-items-center">
                    <div class="col-md-12">
                        <div class="page-header-title">
                            <h5 class="m-b-10">Registros</h5>
                        </div>
                        <ul class="breadcrumb">
                            <li class="breadcrumb-item"><a href="index.html">Inicio</a></li>
                            <li class="breadcrumb-item"><a href="#!">Registros</a></li>
                            <li class="breadcrumb-item">Permisos</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header">
                        <h5>Registrar Permiso</h5>
                    </div>
                    <div class="card-body">
                        <h5 class="mt-5">Información Permiso</h5>
                        <hr>
                        @using (Html.BeginForm("CreatePermissions", "Maintenance", FormMethod.Post))
                        {
                            <form onsubmit="return validarFormulario();">
                                <div class="row">
                                    <div class="form-group col-md-12">
                                        @Html.LabelFor(model => model.permiso, "Descripción Permiso", new { @class = "form-label" })
                                        @Html.TextBoxFor(model => model.permiso, new { @class = "form-control", placeholder = "Permiso" })
                                    </div>
                                </div>
                                <div class="text-center">
                                    <button type="submit" class="btn btn-primary mx-auto">Agregar Permiso</button>
                                </div>
                            </form>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <h5>Reporte de permisos</h5>
                    <span class="d-block m-t-5">Este <code>reporte</code> muestra los permisos asignados</span>
                </div>
                <div class="card-body table-border-style">
                    @*<br>*@
                    <div class="form-group">
                        @*<br>*@
                    </div>


                    <div class="table-responsive">
                        <table id="tablePermiso" class="table">
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>Descripción</th>
                                    <th>Acciones</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (TempData["Permisos"] != null)
                                {
                                    foreach (var permiso in TempData["Permisos"] as List<WebAplication_ProximaGen.Models.Permissions>)
                                    {
                                        <tr>
                                            <td>@permiso.idPermiso</td>
                                            <td>@permiso.permiso</td>
                                            <td>
                                                <a href="#" class="edit-icon" data-id="@permiso.idPermiso" onclick="AbrirModal('@permiso.idPermiso', '@permiso.permiso');"><i class="fas fa-pen"></i></a>
                                                <a href="#" class="delete-icon" data-id="@permiso.idPermiso" onclick="EliminarDato(@permiso.idPermiso);"><i class="fas fa-trash"></i></a>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>



                    <!-- Agrega los botones de exportación aquí -->


                </div>
            </div>
        </div>
    </div>
</section>

<!-- Modal para editar datos -->
<div class="modal fade" id="editarModal" tabindex="-1" role="dialog" aria-labelledby="editarModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editarModalLabel">Editar Datos</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Cerrar">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @using (Html.BeginForm("UpdatePermissions", "Maintenance", FormMethod.Post))
            {
                <form>
                    <div class="modal-body">
                        <div class="form-group">
                            @Html.LabelFor(model => model.idPermiso)
                            @Html.TextBoxFor(model => model.idPermiso, new { @class = "form-control", @readonly = "readonly", @id = "idPermiso" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.permiso)
                            @Html.TextBoxFor(model => model.permiso, new { @class = "form-control", @id = "descripcionPermisoInput" })
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                        <button type="submit" class="btn btn-primary">Guardar Cambios</button>
                    </div>
                </form>
            }
        </div>
    </div>
</div>


<script>

    function validarFormulario() {
        //Se obtiene el campo de descripcionrol
        var descripcionPermiso = document.getElementById("descripcionPermisoInput").value;

        if (descripcionPermiso === "") {
            document.getElementById("errorMensaje").innerText = "La descripción del permiso no puede estar vacía";
            return false;
        }

        if (/^\s*$/.test(descripcionPermiso)) {
            document.getElementById("errorMensaje").innerText = "La descripción del permiso no puede contener espacios vacío";
            return false;
        }

        //Verifico si existe algun digito en el input--
        if (/\d/.test(descripcionPermiso)) {
            document.getElementById("errorMensaje").innerText = "No se puede digitar números en la descripción";
            return false;
        }

        return true;

    }

    function AbrirModal(idPermiso, permiso) {
        const idPermisoInput = document.getElementById("idPermiso");
        const descripcionPermisoInput = document.getElementById("descripcionPermisoInput");

        idPermisoInput.value = idPermiso;
        descripcionPermisoInput.value = permiso;

        const editarModal = new bootstrap.Modal(document.getElementById("editarModal"));
        editarModal.show();
    }

    function EliminarDato(idPermiso) {

        var controller = "Maintenance";
        var action = "DeletePermissions";
        var successMessage = "Se eliminó el permiso con éxito";
        var errorMessage = "No se ha eliminado, hubo un error de comunicación";
        var dataString = "idPermiso";

        EliminarDatosAjax(idPermiso, controller, action, successMessage, errorMessage, dataString);
    }

</script>

@if (TempData["responseCode"] != null)
{
    if (TempData["responseCode"] == null)
    {
        <script>
            CreateAlert('Fallo del sistema', 'error', 'No ha devuelto una respuesta, comuniquese con IT');
        </script>
    }

    if (TempData["responseCode"].ToString().Contains(Constantes.responsesCode[0].ToString()))
    {
        <script>
            var decodedResponse = @Html.Raw(Json.Encode(TempData["response"]));
            CreateAlert('Creación Exitosa', 'success', decodedResponse);
        </script>
    }

    if (TempData["responseCode"].ToString().Contains(Constantes.responsesCode[1].ToString()))
    {
        <script>
            var decodedResponse = @Html.Raw(Json.Encode(TempData["response"]));
            CreateAlert('Creación Denegada', 'error', decodedResponse);
        </script>
    }

    TempData["responseCode"] = null;
}
