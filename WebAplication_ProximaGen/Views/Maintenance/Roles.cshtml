
@{
    ViewBag.Title = "Roles";
}

@using WebAplication_ProximaGen.Logica

@model WebAplication_ProximaGen.Models.Roles



<section class="pc-container">
    <div class="pcoded-content">
        <div class="page-header">
            <div class="page-block">
                <div class="row align-items-center">
                    <div class="col-md-12">
                        <div class="page-header-title">
                            <h5 class="m-b-10">Registros</h5>
                        </div>
                        <ul class="breadcrumb">
                            <li class="breadcrumb-item"><a href="index.html">Inicio</a></li>
                            <li class="breadcrumb-item"><a href="#!">Registros</a></li>
                            <li class="breadcrumb-item">Roles</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header">
                        <h5>Registrar Rol</h5>
                    </div>
                    <div class="card-body">
                        <h5 class="mt-5">Información Roles</h5>
                        <hr>
                        @using (Html.BeginForm("CreateRoles", "Maintenance", FormMethod.Post))
                        {
                            <form>
                                <!--LLamo a la funcion-->
                                <div class="row">
                                    <div class="form-group col-md-12">
                                        @Html.LabelFor(model => model.descripcionRol, "Descripción Rol", new { @class = "form-label" })
                                        @Html.TextBoxFor(model => model.descripcionRol, new { @class = "form-control", placeholder = "Rol", @id = "descripcionRol" })
                                        <span id="errorMensaje" style="color: red;"></span>
                                    </div>
                                </div>
                                <div class="text-center">
                                    <button type="submit" class="btn btn-primary mx-auto">Agregar Rol</button>
                                </div>
                            </form>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <h5>Reporte de roles</h5>
                    <span class="d-block m-t-5">Este <code>reporte</code> muestra los roles asignados</span>
                </div>
                <div class="card-body table-border-style">
                    @*<br>*@
                    <div class="form-group">
                        @* <br>*@
                    </div>


                    <div class="table-responsive">
                        <table id="tableRol" class="table">
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>Descripción</th>
                                    <th>Acciones</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (TempData["Roles"] != null)
                                {
                                    foreach (var rol in TempData["Roles"] as List<WebAplication_ProximaGen.Models.Roles>)
                                    {
                                        <tr>
                                            <td>@rol.idRol</td>
                                            <td>@rol.descripcionRol</td>
                                            <td>
                                                <a href="#" class="edit-icon" data-id="@rol.idRol" onclick="AbrirModal('@rol.idRol', '@rol.descripcionRol');"><i class="fas fa-pen"></i></a>
                                                <a href="#" class="delete-icon" data-id="@rol.descripcionRol" onclick="EliminarDato(@rol.idRol);"><i class="fas fa-trash"></i></a>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>



                    <!-- Agrega los botones de exportación aquí -->


                </div>
            </div>
        </div>
    </div>
</section>

<!-- Modal para editar datos -->
<div class="modal fade" id="editarModal" tabindex="-1" role="dialog" aria-labelledby="editarModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editarModalLabel">Editar Datos</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Cerrar">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @using (Html.BeginForm("UpdateRoles", "Maintenance", FormMethod.Post))
            {
                <form>
                    <div class="modal-body">
                        <div class="form-group">
                            @Html.LabelFor(model => model.idRol)
                            @Html.TextBoxFor(model => model.idRol, new { @class = "form-control", @readonly = "readonly", @id = "idRol" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.descripcionRol)
                            @Html.TextBoxFor(model => model.descripcionRol, new { @class = "form-control", @id = "descripcionRolInput" })
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                        <button type="submit" class="btn btn-primary">Guardar Cambios</button>
                    </div>
                </form>
            }
        </div>
    </div>
</div>


<script>

    function AbrirModal(idRol, descripcionRol) {
        const idRolInput = document.getElementById("idRol");
        const descripcionRolInput = document.getElementById("descripcionRolInput");

        idRolInput.value = idRol;
        descripcionRolInput.value = descripcionRol;

        const editarModal = new bootstrap.Modal(document.getElementById("editarModal"));
        editarModal.show();
    }




    function EliminarDato(idRol) {
        var controller = "Maintenance";
        var action = "DeleteRoles";
        var successMessage = "Se eliminó el rol con éxito";
        var errorMessage = "No se ha eliminado, hubo un error de comunicación";
        var dataString = "idRol";

        EliminarDatosAjax(idRol, controller, action, successMessage, errorMessage, dataString);

        //Actualizar datos
    }

</script>


@if (TempData["responseCode"] != null)
{
    if (TempData["responseCode"] == null)
    {
        <script>
            CreateAlert('Fallo del sistema', 'error', 'No ha devuelto una respuesta, comuniquese con IT');
        </script>
    }

    if (TempData["responseCode"].ToString().Contains(Constantes.responsesCode[0].ToString()))
    {
        <script>
            var decodedResponse = @Html.Raw(Json.Encode(TempData["response"]));
            CreateAlert('Creación Exitosa', 'success', decodedResponse);
        </script>
    }

    if (TempData["responseCode"].ToString().Contains(Constantes.responsesCode[1].ToString()))
    {
        <script>
            var decodedResponse = @Html.Raw(Json.Encode(TempData["response"]));
            CreateAlert('Creación Denegada', 'error', decodedResponse);
        </script>
    }

    TempData["responseCode"] = null;
}
